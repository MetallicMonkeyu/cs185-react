{"ast":null,"code":"var _jsxFileName = \"/Users/shengjiayu/Documents/GitHub/cs185-react/src/Components/Form.js\";\nimport React, { Component } from 'react';\nimport config from '../config.js';\n\nconst firebase = require('firebase');\n\nexport class Form extends Component {\n  constructor(props) {\n    super();\n\n    this.myFormHandler = event => {\n      event.preventDefault();\n\n      if (this.state.name === '') {\n        alert(\"Missing the following required field: name\");\n      } else if (this.state.msg === '') {\n        alert(\"Missing the following required field: message\");\n      } else if (this.state.visibility === '') {\n        alert(\"Missing the following required field: visibility\");\n      } else {\n        let formObj = {\n          name: this.state.name,\n          desc: this.state.desc,\n          msg: this.state.msg,\n          visibility: this.state.visibility,\n          email: this.state.email,\n          date: firebase.database.ServerValue.TIMESTAMP\n        };\n        firebase.database().ref('data').push().set(formObj);\n        this.setState({\n          shouldUpdate: true\n        });\n        alert(\"Message successfully delivered!\");\n      }\n    };\n\n    this.myChangeHandler = event => {\n      let field = event.target.name;\n      let value = event.target.value;\n      this.setState({\n        [field]: value\n      });\n    };\n\n    this.state = {\n      name: '',\n      desc: '',\n      msg: '',\n      visibility: 'private',\n      email: '',\n      shouldUpdate: false,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    document.title = 'Leave a Message';\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n\n    let ref = firebase.database().ref('data');\n    ref.on('value', snapshot => {\n      let data = snapshot.val();\n      let newData = [];\n      let months = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"];\n\n      for (let entry in data) {\n        let d = new Date(data[entry].date);\n        let date = months[d.getMonth()] + \" \" + d.getDate() + \", \" + d.getFullYear() + \" (\" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds() + \")\";\n        newData.push({\n          id: entry,\n          name: data[entry].name,\n          desc: data[entry].desc,\n          msg: data[entry].msg,\n          visibility: data[entry].visibility,\n          email: data[entry].email,\n          date: date\n        });\n      }\n\n      this.setState({\n        data: newData\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    //only call set state here if it is wrapped in a condition\n    //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n    if (this.state.shouldUpdate !== prevState.shouldUpdate) {\n      //same code as above to retrieve the data \n      let ref = firebase.database().ref('data');\n      ref.on('value', snapshot => {\n        let data = snapshot.val();\n        let newData = [];\n        let months = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"];\n\n        for (let entry in data) {\n          let d = new Date(data[entry].date);\n          let date = months[d.getMonth()] + \" \" + d.getDate() + \", \" + d.getFullYear() + \" (\" + d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds() + \")\";\n          newData.push({\n            id: entry,\n            name: data[entry].name,\n            desc: data[entry].desc,\n            msg: data[entry].msg,\n            visibility: data[entry].visibility,\n            email: data[entry].email,\n            date: date\n          });\n        }\n\n        this.setState({\n          data: newData\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"form-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.myFormHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, \"Leave Me a Message\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 18\n      }\n    }, \"*\"), \" Enter your name:\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      placeholder: \"What's your name?\",\n      type: \"text\",\n      minLength: \"6\",\n      maxLength: \"19\",\n      required: true,\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Add a description about yourself:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"desc\",\n      placeholder: \"Give a brief description about yourself.\",\n      type: \"text\",\n      size: \"50\",\n      maxLength: \"99\",\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 18\n      }\n    }, \"*\"), \" Leave your message:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"msg\",\n      placeholder: \"What would you like to say here?\",\n      minLength: \"16\",\n      maxLength: \"499\",\n      required: true,\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 18\n      }\n    }, \"*\"), \" Would you like your name and message to be public?\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"yes\",\n      name: \"visibility\",\n      onChange: this.handleChange,\n      value: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 16\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"no\",\n      name: \"visibility\",\n      onChange: this.handleChange,\n      value: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 12\n      }\n    }, \"No\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"Your email:\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      placeholder: \"How should I contact you?\",\n      type: \"text\",\n      size: \"30\",\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"submit\",\n      name: \"submit\",\n      value: \"Submit Your Message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 40\n      }\n    }, \"*\"), \": indicates a required field\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"responses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      id: \"resp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, \"Messages\"), this.state.data.map(entry => {\n      if (entry.visibility !== 'private') {\n        if (entry.desc !== '') {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"response\",\n            id: entry.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"name\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 27\n            }\n          }, entry.name), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"date\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 27\n            }\n          }, entry.date)), /*#__PURE__*/React.createElement(\"i\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }\n          }, entry.desc), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 44\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"message\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }\n          }, entry.msg), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 69\n            }\n          }));\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"response\",\n            id: entry.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"name\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 27\n            }\n          }, entry.name), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"date\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 27\n            }\n          }, entry.date)), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"message\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }\n          }, entry.msg), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 69\n            }\n          }));\n        }\n      }\n    })))));\n  }\n\n}\nexport default Form;","map":{"version":3,"sources":["/Users/shengjiayu/Documents/GitHub/cs185-react/src/Components/Form.js"],"names":["React","Component","config","firebase","require","Form","constructor","props","myFormHandler","event","preventDefault","state","name","alert","msg","visibility","formObj","desc","email","date","database","ServerValue","TIMESTAMP","ref","push","set","setState","shouldUpdate","myChangeHandler","field","target","value","data","componentDidMount","document","title","apps","length","initializeApp","on","snapshot","val","newData","months","entry","d","Date","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","id","componentDidUpdate","prevProps","prevState","render","handleChange","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport config from '../config.js';\nconst firebase = require('firebase')\n\nexport class Form extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      name: '',\n      desc: '',\n      msg: '',\n      visibility: 'private',\n      email: '',\n      shouldUpdate: false,\n      data: [],\n    }\n  }\n\n  componentDidMount(){\n    document.title = 'Leave a Message';\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n    let ref = firebase.database().ref('data');\n    ref.on('value', snapshot => {\n      let data = snapshot.val();\n        let newData = [];\n        let months = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"];\n        for (let entry in data) {\n          let d = new Date(data[entry].date);\n          let date = months[d.getMonth()]+\" \"+d.getDate()+\", \"+d.getFullYear()+\" (\"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds()+\")\";\n          newData.push({\n            id: entry,\n            name: data[entry].name,\n            desc: data[entry].desc,\n            msg: data[entry].msg,\n            visibility: data[entry].visibility,\n            email: data[entry].email,\n            date: date,\n          })\n        }\n        this.setState({data: newData});\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n    //only call set state here if it is wrapped in a condition\n    //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n    if(this.state.shouldUpdate !== prevState.shouldUpdate){\n      //same code as above to retrieve the data \n      let ref = firebase.database().ref('data');\n      ref.on('value', snapshot => {\n        let data = snapshot.val();\n        let newData = [];\n        let months = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"];\n        for (let entry in data) {\n          let d = new Date(data[entry].date);\n          let date = months[d.getMonth()]+\" \"+d.getDate()+\", \"+d.getFullYear()+\" (\"+d.getHours()+\":\"+d.getMinutes()+\":\"+d.getSeconds()+\")\";\n          newData.push({\n            id: entry,\n            name: data[entry].name,\n            desc: data[entry].desc,\n            msg: data[entry].msg,\n            visibility: data[entry].visibility,\n            email: data[entry].email,\n            date: date,\n          })\n        }\n        this.setState({data: newData});\n      })\n    }\n  }\n\n  myFormHandler = (event) => {\n    event.preventDefault();\n    if (this.state.name === '') {\n      alert(\"Missing the following required field: name\");\n    } else if (this.state.msg === '') {\n      alert(\"Missing the following required field: message\");\n    } else if (this.state.visibility === '') {\n      alert(\"Missing the following required field: visibility\");\n    } else {\n      let formObj = {\n        name: this.state.name, \n        desc: this.state.desc,\n        msg: this.state.msg,\n        visibility: this.state.visibility,\n        email: this.state.email,\n        date: firebase.database.ServerValue.TIMESTAMP,\n      };\n      firebase.database().ref('data').push().set(formObj);\n      this.setState({shouldUpdate: true});\n      alert(\"Message successfully delivered!\");\n    }\n  }\n\n  myChangeHandler = (event) => {\n    let field = event.target.name;\n    let value = event.target.value;\n    this.setState({[field]: value});\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='content'>\n          <div id='form-section'>\n            <div className='form'>\n            <form onSubmit={this.myFormHandler}>\n              <h2>Leave Me a Message</h2>\n              <p><b>*</b> Enter your name:&nbsp;\n              <input name='name' placeholder=\"What's your name?\" type='text' minLength='6' maxLength='19' required onChange={this.myChangeHandler} /></p>\n              <p>Add a description about yourself:<br/>\n              <input name='desc' placeholder=\"Give a brief description about yourself.\" type='text' size='50' maxLength='99' onChange={this.myChangeHandler}/>\n              </p>\n              <p><b>*</b> Leave your message:<br/>\n                <textarea name='msg' placeholder=\"What would you like to say here?\" minLength='16' maxLength='499' required onChange={this.myChangeHandler}></textarea>\n              </p>\n              <p><b>*</b> Would you like your name and message to be public?<br/>\n                {/* <select id='visibility' name='visibility' required onChange={this.myChangeHandler}> */}\n                  {/* <option value='private'>No</option>\n                  <option value='public'>Yes</option> */}\n                  <input type=\"radio\" id=\"yes\" name=\"visibility\" onChange={this.handleChange} value={true}/>\n\t\t\t            <label for=\"yes\">Yes</label>\n\t\t\t\t\t\t\t    <input type=\"radio\" id=\"no\" name=\"visibility\" onChange={this.handleChange} value={false}/>\n\t\t\t\t\t\t\t    <label for=\"no\">No</label>\n                {/* </select> */}\n              </p>\n              <p>Your email:\n              <input name='email' placeholder=\"How should I contact you?\" type='text' size='30' onChange={this.myChangeHandler}/>\n              </p>\n              <div>\n                <input type='submit' id='submit' name='submit' value='Submit Your Message'></input>\n                <span className='note'><b>*</b>: indicates a required field</span>\n              </div>\n            </form>\n            </div>\n            <div className='responses'>\n              <h2 id='resp'>Messages</h2>\n              {this.state.data.map((entry) => {\n                if(entry.visibility !== 'private') {\n                  if(entry.desc !== '') {\n                    return (\n                      <div className='response' id={entry.id}>\n                        <div>\n                          <span className='name'>{entry.name}</span>\n                          <span className='date'>{entry.date}</span>\n                        </div>\n                        <i>{entry.desc}</i><br/>\n                        <span className='message'>{entry.msg}</span><br/>\n                      </div>\n                    )\n                  } else {\n                    return (\n                      <div className='response' id={entry.id}>\n                        <div>\n                          <span className='name'>{entry.name}</span>\n                          <span className='date'>{entry.date}</span>\n                        </div>\n                        <span className='message'>{entry.msg}</span><br/>\n                      </div>\n                    )\n                  }\n                }\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}
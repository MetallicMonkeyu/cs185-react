{"ast":null,"code":"var _jsxFileName = \"/Users/shengjiayu/Documents/GitHub/cs185-react/src/Components/AddMovie.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { PopupboxManager, PopupboxContainer } from 'react-popupbox';\nimport 'react-popupbox/dist/react-popupbox.css';\nimport config from '../config';\n\nconst firebase = require('firebase');\n\nexport class AddMovie extends Component {\n  constructor() {\n    super();\n\n    this.loadMovies = () => {\n      if (this.state.currentList.name === 'All') {\n        let ref = firebase.database().ref('movies').orderByChild('title').limitToFirst(this.state.moviesToLoad);\n        ref.on('child_added', snapshot => {\n          let movie = snapshot.val();\n          let last = movie.title; // console.log(movie);\n\n          let movies = this.state.movies;\n          movies.push(movie);\n          this.setState({\n            'movies': movies,\n            'last': last,\n            'loaded': this.state.loaded + 1 % this.state.moviesToLoad,\n            'loading': this.state.loaded + 1 < this.state.moviesToLoad\n          });\n        });\n      }\n\n      let movieIDs = this.getIDsInList();\n      movieIDs.forEach(movieID => {\n        let ref = firebase.database().ref('movies').orderByChild('id').equalTo(movieID).limitToFirst(1);\n        ref.on('child_added', snapshot => {\n          let movie = snapshot.val();\n          let last = movie.title;\n\n          if (this.state.currentList.name !== 'All') {\n            let show = false;\n            movieIDs.forEach(movieID => {\n              if (movie.id === movieID) show = true;\n            });\n            if (!show) return;\n          }\n\n          let movies = this.state.movies;\n          movies.push(movie);\n          this.setState({\n            'movies': movies,\n            'last': last,\n            'loaded': this.state.loaded + 1 % this.state.moviesToLoad,\n            'loading': this.state.loaded + 1 < this.state.moviesToLoad\n          });\n        });\n      });\n    };\n\n    this.loadMore = () => {\n      if (this.state.loading) return;\n      this.setState({\n        loading: true,\n        loaded: 0\n      });\n      let ref = firebase.database().ref('movies').orderByChild('title').startAt(this.state.last).limitToFirst(this.state.moviesToLoad + 1);\n      let movieIDs = [];\n      if (this.state.currentList.name !== 'All') movieIDs = this.getIDsInList();\n      ref.on('child_added', snapshot => {\n        const movie = snapshot.val();\n        let duplicate = false;\n        this.state.movies.forEach(m => {\n          if (m.id === movie.id) duplicate = true;\n        });\n        if (duplicate) return;\n\n        if (this.state.currentList.name !== 'All') {\n          let show = false;\n          movieIDs.forEach(movieID => {\n            if (movie.id === movieID) show = true;\n          });\n          if (!show) return;\n        }\n\n        let movies = this.state.movies;\n        movies.push(movie);\n        let last = movie.title;\n        this.setState({\n          'movies': movies,\n          'last': last,\n          'loaded': this.state.loaded + 1 % this.state.moviesToLoad,\n          'loading': this.state.loaded + 1 < this.state.moviesToLoad\n        }); // if ()\n      });\n    };\n\n    this.addMovie = event => {\n      event.preventDefault();\n\n      if (this.state.movieID.slice(0, 2) !== 'tt' || !/^\\d+$/.test(this.state.movieID.slice(2))) {\n        const title = this.state.movieID;\n        this.setState({\n          'movieID': ''\n        });\n        Axios.get('https://www.omdbapi.com/?apikey=' + 'ec05d9ae' + '&t=' + title).then(response => {\n          if (response.data.Response === 'False') {\n            alert('Movie cannot be found! Try another one.');\n            return;\n          }\n\n          let duplicate = false;\n          this.state.movies.forEach(movie => {\n            if (movie.id === response.data.imdbID) duplicate = true;\n          });\n\n          if (duplicate) {\n            alert('Movie existed!');\n            return;\n          }\n\n          let movie = [];\n          movie.id = response.data.imdbID;\n          movie.title = response.data.Title;\n          movie.director = response.data.Director;\n          movie.year = response.data.Year;\n          movie.plot = response.data.Plot;\n          movie.rating = response.data.imdbRating;\n          movie.poster = response.data.Poster;\n          firebase.database().ref('movies').push().set(movie); // Axios.get('https://api.themoviedb.org/3/search/movie?api_key=' + 'a3efe44be05d742a6538700127b0e7f2' + '&language=en-US&query=' + movie.title + '&page=1&year=' + movie.year)\n          // .then(response => {\n          // \tif (response.data.results.length === 0) {\n          // \t\talert('Movie not found');\n          // \t\treturn;\n          // \t}\n          // \tmovie.poster = 'https://image.tmdb.org/t/p/w500' + response.data.results[0].poster_path;\n          // \tfirebase.database().ref('movies').push().set(movie);\n          // \twindow.scrollTo({\n          // \t\ttop: document.body.scrollHeight,\n          // \t\tbehavior: 'smooth'\n          // \t});\n          // });\n        });\n        return;\n      }\n\n      const id = this.state.movieID;\n      this.setState({\n        'movieID': ''\n      });\n      let duplicate = false;\n      this.state.movies.forEach(movie => {\n        if (movie.id === id) duplicate = true;\n      });\n\n      if (duplicate) {\n        alert('Movie already added');\n        return;\n      }\n\n      Axios.get('https://www.omdbapi.com/?apikey=' + 'ec05d9ae' + '&i=' + id).then(response => {\n        if (response.data.Response === 'False') {\n          alert('Movie not found');\n          return;\n        }\n\n        let movie = [];\n        movie.id = id;\n        movie.title = response.data.Title;\n        movie.director = response.data.Director;\n        movie.year = response.data.Year;\n        movie.plot = response.data.Plot;\n        movie.rating = response.data.imdbRating;\n        movie.poster = response.data.Poster;\n        firebase.database().ref('movies').push().set(movie); // Axios.get('https://api.themoviedb.org/3/search/movie?api_key=' + 'a3efe44be05d742a6538700127b0e7f2' +'&language=en-US&query=' + movie.title + '&page=1&year=' + movie.year)\n        // .then(response => {\n        // \tif (response.data.results.length === 0) {\n        // \t\talert('Movie not found');\n        // \t\treturn;\n        // \t}\n        // \tmovie.poster = 'https://image.tmdb.org/t/p/w500' + response.data.results[0].poster_path;\n        // \tfirebase.database().ref('movies').push().set(movie);\n        // \twindow.scrollTo({\n        // \t\ttop: document.body.scrollHeight,\n        // \t\tbehavior: 'smooth'\n        // \t});\n        // });\n      });\n    };\n\n    this.addList = event => {\n      event.preventDefault();\n      console.log('addList: ' + this.state.listName);\n      let listName = this.state.listName;\n      this.setState({\n        'listName': ''\n      });\n      let duplicate = false;\n      Object.entries(this.state.lists).forEach(list => {\n        if (listName.toLowerCase() === list[1].toLowerCase()) duplicate = true;\n      });\n\n      if (duplicate) {\n        alert('List already exists');\n        return;\n      }\n\n      ;\n      let ref = firebase.database().ref('lists');\n      let listRefKey = ref.push().key;\n      let updates = {};\n      updates['/lists/' + listRefKey + '/id'] = listRefKey;\n      updates['/lists/' + listRefKey + '/name'] = listName;\n      firebase.database().ref().update(updates);\n    };\n\n    this.getUpdateLists = () => {\n      return Object.entries(this.state.lists).map(list => /*#__PURE__*/React.createElement(\"option\", {\n        key: list[0],\n        value: list[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 4\n        }\n      }, list[1]));\n    };\n\n    this.getAddToLists = id => {\n      return Object.entries(this.state.lists).map((list, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: list[0],\n        value: list[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 4\n        }\n      }, list[1]));\n    };\n\n    this.updateList = event => {\n      let listName = '';\n\n      if (event.target.value === '') {\n        listName = 'All';\n      } else {\n        listName = this.state.lists[event.target.value];\n      }\n\n      this.setState({\n        movies: [],\n        currentList: {\n          id: event.target.value,\n          name: listName\n        },\n        loaded: 0,\n        loading: true\n      });\n      this.forceUpdate(this.loadMovies);\n    };\n\n    this.addToList = (event, movieID) => {\n      let listID = event.target.value;\n      let duplicate = false;\n      this.state.movieListPairs.forEach(movieListPair => {\n        let pair = movieListPair.split(' - ');\n        if (pair[0] === listID && pair[1] === movieID) duplicate = true;\n      });\n\n      if (duplicate) {\n        alert('Movie already in the selected list');\n        return;\n      }\n\n      ;\n      let ref = firebase.database().ref('movie-lists');\n      ref.push().set({\n        [listID]: movieID\n      });\n      alert('Added ' + movieID + ' to ' + this.state.lists[event.target.value]);\n    };\n\n    this.getIDsInList = () => {\n      let movieIDs = [];\n      this.state.movieListPairs.forEach(movieListPair => {\n        if (movieListPair.search(this.state.currentList.id) > -1) {\n          movieIDs.push(movieListPair.slice((this.state.currentList.id + ' - ').length));\n        }\n      });\n      return movieIDs;\n    };\n\n    this.search = event => {\n      event.preventDefault();\n    };\n\n    this.deleteMovie = movieID => {\n      console.log('deleteMovie');\n      let ref = firebase.database().ref('movies');\n      ref.orderByChild('id').equalTo(movieID).limitToFirst(1).on('child_added', snapshot => {\n        console.log(snapshot.key);\n        ref.child(snapshot.key).remove();\n      });\n      let movies = this.state.movies;\n      let toDelete = -1;\n      movies.forEach((movie, i) => {\n        if (movie.id === movieID) toDelete = i;\n      });\n      movies.splice(toDelete, 1);\n      this.setState({\n        movies: movies\n      });\n      PopupboxManager.close();\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.lockScroll = () => {\n      document.body.style.overflow = 'hidden';\n    };\n\n    this.unlockScroll = () => {\n      document.body.style.overflow = 'inherit';\n    };\n\n    this.displayMovies = () => {\n      return this.state.movies.filter(movie => movie.title.toLowerCase().includes(this.state.searchQuery)).map(movie => /*#__PURE__*/React.createElement(\"img\", {\n        className: \"moviePoster\",\n        src: movie.poster,\n        key: movie.id,\n        alt: \"\",\n        onMouseEnter: this.dimPoster,\n        onMouseLeave: this.resetPoster,\n        onClick: this.displayLightbox.bind(this, movie),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 4\n        }\n      }));\n    };\n\n    this.displayLightbox = movie => {\n      const content = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movLightboxContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"movLightboxImage\",\n        src: movie.poster,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movLightboxContent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 6\n        }\n      }, movie.title), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"director\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 6\n        }\n      }, \"Directed by: \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 48\n        }\n      }, movie.director)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 6\n        }\n      }, movie.plot), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"rating\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 6\n        }\n      }, \"Rating: \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 41\n        }\n      }, movie.rating)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        className: \"dropdown\",\n        value: this.state.addToListName,\n        onChange: event => {\n          this.addToList(event, movie.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        hidden: true,\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 8\n        }\n      }, \"Add to List\"), this.getAddToLists(movie.id))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"delete-button-add\",\n        onClick: () => {\n          this.deleteMovie(movie.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }\n      }, \"Delete From Collection\"))));\n      PopupboxManager.open({\n        content,\n        config: {\n          onOpen: this.lockScroll,\n          onClosed: this.unlockScroll\n        }\n      });\n    };\n\n    this.state = {\n      movies: [],\n      moviesToLoad: 8,\n      last: '',\n      loaded: 0,\n      loading: true,\n      movieID: '',\n      listName: '',\n      lists: {},\n      movieListPairs: [],\n      addToListName: 'Add to List',\n      currentList: {\n        id: '',\n        name: 'All'\n      },\n      searchQuery: '',\n      filteredMovies: [],\n      maxLoaded: false\n    };\n    this.wrapper = React.createRef();\n    this.setState({\n      loading: false\n    });\n  }\n\n  componentDidMount() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n\n    this.loadMovies();\n    let ref = firebase.database().ref('lists');\n    ref.orderByChild('name').on('value', snapshot => {\n      if (!snapshot.val()) return;\n      let lists = {};\n      Object.values(snapshot.val()).forEach(list => {\n        lists[list.id] = list.name;\n      });\n      this.setState({\n        lists: lists\n      });\n    });\n    ref = firebase.database().ref('movie-lists');\n    ref.orderByKey().on('value', snapshot => {\n      if (!snapshot.val()) return;\n      let movieLists = [];\n      Object.values(snapshot.val()).forEach(movieListPair => {\n        let pair = Object.entries(movieListPair)[0];\n        movieLists.push(pair[0] + ' - ' + pair[1]);\n      });\n      this.setState({\n        movieListPairs: movieLists\n      });\n    });\n  } // componentWillUnmount() {\n  //     this.;\n  // }\n\n\n  dimPoster(e) {\n    e.target.style.opacity = 0.5;\n  }\n\n  resetPoster(e) {\n    e.target.style.opacity = 1;\n  }\n\n  render() {\n    const popupboxConfig = {\n      style: {\n        overflow: 'inherit'\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 5\n      }\n    }, \"Movies Collection \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-forms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.updateList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }\n    }, \"All\"), this.getUpdateLists())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-add-forms\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"movie-form\",\n      onSubmit: e => this.addMovie(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"movieID\",\n      className: \"form-input-text\",\n      value: this.state.movieID,\n      onChange: e => this.handleChange(e),\n      placeholder: \"Movie title or IMDB ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add a Movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"movie-form\",\n      onSubmit: e => this.addList(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"listName\",\n      className: \"form-input-text\",\n      value: this.state.listName,\n      onChange: e => this.handleChange(e),\n      placeholder: \"Enter a new list name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"movie-form\",\n      onSubmit: e => this.search(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 32\n      }\n    }, \"Search By Name: \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"searchQuery\",\n      className: \"form-input-text\",\n      value: this.state.searchQuery,\n      onChange: e => this.handleChange(e),\n      placeholder: \"Enter a name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 8\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies\",\n      ref: this.moviesScroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 5\n      }\n    }, this.displayMovies(), /*#__PURE__*/React.createElement(PopupboxContainer, Object.assign({}, popupboxConfig, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 6\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 17\n      }\n    }, !this.state.loading && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"but\",\n      onClick: this.loadMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 43\n      }\n    }, \"Load More ...\")));\n  }\n\n}\nexport default AddMovie;","map":{"version":3,"sources":["/Users/shengjiayu/Documents/GitHub/cs185-react/src/Components/AddMovie.js"],"names":["React","Component","Axios","PopupboxManager","PopupboxContainer","config","firebase","require","AddMovie","constructor","loadMovies","state","currentList","name","ref","database","orderByChild","limitToFirst","moviesToLoad","on","snapshot","movie","val","last","title","movies","push","setState","loaded","movieIDs","getIDsInList","forEach","movieID","equalTo","show","id","loadMore","loading","startAt","duplicate","m","addMovie","event","preventDefault","slice","test","get","then","response","data","Response","alert","imdbID","Title","director","Director","year","Year","plot","Plot","rating","imdbRating","poster","Poster","set","addList","console","log","listName","Object","entries","lists","list","toLowerCase","listRefKey","key","updates","update","getUpdateLists","map","getAddToLists","i","updateList","target","value","forceUpdate","addToList","listID","movieListPairs","movieListPair","pair","split","search","length","deleteMovie","child","remove","toDelete","splice","close","handleChange","lockScroll","document","body","style","overflow","unlockScroll","displayMovies","filter","includes","searchQuery","dimPoster","resetPoster","displayLightbox","bind","content","addToListName","open","onOpen","onClosed","filteredMovies","maxLoaded","wrapper","createRef","componentDidMount","apps","initializeApp","values","orderByKey","movieLists","e","opacity","render","popupboxConfig","moviesScroll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { PopupboxManager, PopupboxContainer } from 'react-popupbox';\nimport 'react-popupbox/dist/react-popupbox.css'; \nimport config from '../config';\n\nconst firebase = require('firebase');\n\nexport class AddMovie extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmovies: [],\n\t\t\tmoviesToLoad: 8,\n\t\t\tlast: '',\n\t\t\tloaded: 0,\n\t\t\tloading: true,\n\t\t\tmovieID: '',\n\t\t\tlistName: '',\n\t\t\tlists: {},\n\t\t\tmovieListPairs: [],\n\t\t\taddToListName: 'Add to List',\n\t\t\tcurrentList: {id: '', name: 'All'},\n\t\t\tsearchQuery: '',\n            filteredMovies: [],\n            maxLoaded: false\n\t\t};\n\t\tthis.wrapper = React.createRef();\n\n        this.setState({loading:false});\n\t}\n\n\tcomponentDidMount() {\n\t\tif (!firebase.apps.length) {\n\t\t\tfirebase.initializeApp(config);\n\t\t}\n\n\t\tthis.loadMovies();\n\n\t\tlet ref = firebase.database().ref('lists');\n\t\tref.orderByChild('name').on('value', snapshot => {\n\t\t\tif (!snapshot.val()) return;\n\t\t\t\n\t\t\tlet lists = {};\n\t\t\t\n\t\t\tObject.values(snapshot.val()).forEach(list => {\n\t\t\t\tlists[list.id] = list.name;\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\tlists: lists\n\t\t\t});\n\t\t});\n\n\t\tref = firebase.database().ref('movie-lists');\n\t\tref.orderByKey().on('value', snapshot => {\n\t\t\tif (!snapshot.val()) return;\n\t\t\t\n\t\t\tlet movieLists = [];\n\n\t\t\tObject.values(snapshot.val()).forEach(movieListPair => {\n\t\t\t\tlet pair = Object.entries(movieListPair)[0];\n\t\t\t\tmovieLists.push(pair[0] + ' - ' + pair[1]);\n\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\tmovieListPairs: movieLists\n\t\t\t});\n\t\t});\n\n    }\n    // componentWillUnmount() {\n    //     this.;\n    // }\n\n\tloadMovies = () => {\n\t\tif (this.state.currentList.name === 'All') {\n\t\t\tlet ref = firebase.database()\n\t\t\t\t.ref('movies')\n\t\t\t\t.orderByChild('title')\n\t\t\t\t.limitToFirst(this.state.moviesToLoad);\n\t\t\t\n\t\t\tref.on('child_added', snapshot => {\n\t\t\t\tlet movie = snapshot.val();\n\t\t\t\tlet last = movie.title;\n\t\t\t\t// console.log(movie);\n\n\t\t\t\tlet movies = this.state.movies;\n\t\t\t\tmovies.push(movie);\n\n\t\t\t\tthis.setState({\n\t\t\t\t\t'movies': movies,\n\t\t\t\t\t'last': last,\n\t\t\t\t\t'loaded': this.state.loaded + 1 % this.state.moviesToLoad,\n\t\t\t\t\t'loading': this.state.loaded + 1 < this.state.moviesToLoad\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tlet movieIDs = this.getIDsInList();\n\t\t\n\t\tmovieIDs.forEach(movieID => {\n\t\t\tlet ref = firebase.database()\n\t\t\t\t.ref('movies')\n\t\t\t\t.orderByChild('id')\n\t\t\t\t.equalTo(movieID)\n\t\t\t\t.limitToFirst(1);\n\n\t\t\tref.on('child_added', snapshot => {\n\t\t\t\tlet movie = snapshot.val();\n\t\t\t\tlet last = movie.title;\n\t\n\t\t\t\tif (this.state.currentList.name !== 'All') {\n\t\t\t\t\tlet show = false;\n\t\t\t\t\tmovieIDs.forEach(movieID => {\n\t\t\t\t\t\tif (movie.id === movieID) show = true;\n\t\t\t\t\t});\n\t\t\t\t\tif (!show) return;\n\t\t\t\t}\n\t\n\t\t\t\tlet movies = this.state.movies;\n\t\t\t\tmovies.push(movie);\n\t\n\t\t\t\tthis.setState({\n\t\t\t\t\t'movies': movies,\n\t\t\t\t\t'last': last,\n\t\t\t\t\t'loaded': this.state.loaded + 1 % this.state.moviesToLoad,\n\t\t\t\t\t'loading': this.state.loaded + 1 < this.state.moviesToLoad\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tloadMore = () => {\n\t\tif (this.state.loading) return;\n\t\t\n\t\tthis.setState({\n\t\t\tloading: true,\n\t\t\tloaded: 0\n\t\t});\n\t\t\n\t\tlet ref = firebase.database()\n\t\t\t.ref('movies')\n\t\t\t.orderByChild('title')\n\t\t\t.startAt(this.state.last)\n\t\t\t.limitToFirst(this.state.moviesToLoad + 1);\n\n\t\tlet movieIDs = [];\n\t\tif (this.state.currentList.name !== 'All') movieIDs = this.getIDsInList();\n\n\t\tref.on('child_added', snapshot => {\n\t\t\tconst movie = snapshot.val();\n\n\t\t\tlet duplicate = false;\n\t\t\tthis.state.movies.forEach(m => {\n\t\t\t\tif (m.id === movie.id) duplicate = true;\n\t\t\t});\n\t\t\tif (duplicate) return;\n\n\t\t\tif (this.state.currentList.name !== 'All') {\n\t\t\t\tlet show = false;\n\t\t\t\tmovieIDs.forEach(movieID => {\n\t\t\t\t\tif (movie.id === movieID) show = true;\n\t\t\t\t});\n\t\t\t\tif (!show) return;\n\t\t\t}\n\n\t\t\tlet movies = this.state.movies;\n\t\t\tmovies.push(movie);\n\n\t\t\tlet last = movie.title;\n\n\t\t\tthis.setState({\n\t\t\t\t'movies': movies,\n\t\t\t\t'last': last,\n\t\t\t\t'loaded': this.state.loaded + 1 % this.state.moviesToLoad,\n\t\t\t\t'loading': this.state.loaded + 1 < this.state.moviesToLoad\n            });\n            // if ()\n\t\t});\n\t}\n\n\taddMovie = (event) => {\n\t\tevent.preventDefault();\n\t\t\n\t\tif (this.state.movieID.slice(0, 2) !== 'tt' || !/^\\d+$/.test(this.state.movieID.slice(2))) {\n\t\t\tconst title = this.state.movieID;\n\n\t\t\tthis.setState({\n\t\t\t\t'movieID': ''\n\t\t\t});\n\n\t\t\tAxios.get('https://www.omdbapi.com/?apikey=' + 'ec05d9ae' + '&t=' + title)\n\t\t\t.then(response => {\n\t\t\t\tif (response.data.Response === 'False') {\n\t\t\t\t\talert('Movie cannot be found! Try another one.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet duplicate = false;\n\t\t\t\tthis.state.movies.forEach(movie => {\n\t\t\t\t\tif (movie.id === response.data.imdbID) duplicate = true;\n\t\t\t\t});\n\n\t\t\t\tif (duplicate) {\n\t\t\t\t\talert('Movie existed!');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet movie = [];\n\t\t\t\tmovie.id = response.data.imdbID;\n\t\t\t\tmovie.title = response.data.Title;\n\t\t\t\tmovie.director = response.data.Director;\n\t\t\t\tmovie.year = response.data.Year;\n\t\t\t\tmovie.plot = response.data.Plot;\n\t\t\t\tmovie.rating = response.data.imdbRating;\n                movie.poster = response.data.Poster;\n                firebase.database().ref('movies').push().set(movie);\n\t\t\t\t// Axios.get('https://api.themoviedb.org/3/search/movie?api_key=' + 'a3efe44be05d742a6538700127b0e7f2' + '&language=en-US&query=' + movie.title + '&page=1&year=' + movie.year)\n\t\t\t\t// .then(response => {\n\t\t\t\t// \tif (response.data.results.length === 0) {\n\t\t\t\t// \t\talert('Movie not found');\n\t\t\t\t// \t\treturn;\n\t\t\t\t// \t}\n\n\t\t\t\t// \tmovie.poster = 'https://image.tmdb.org/t/p/w500' + response.data.results[0].poster_path;\n\n\t\t\t\t// \tfirebase.database().ref('movies').push().set(movie);\n\n\t\t\t\t// \twindow.scrollTo({\n\t\t\t\t// \t\ttop: document.body.scrollHeight,\n\t\t\t\t// \t\tbehavior: 'smooth'\n\t\t\t\t// \t});\n\t\t\t\t// });\n\t\t\t});\n\t\t\t\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = this.state.movieID;\n\n\t\tthis.setState({\n\t\t\t'movieID': ''\n\t\t});\n\t\t\n\t\tlet duplicate = false;\n\t\tthis.state.movies.forEach(movie => {\n\t\t\tif (movie.id === id) duplicate = true;\n\t\t});\n\n\t\tif (duplicate) {\n\t\t\talert('Movie already added');\n\t\t\treturn;\n\t\t}\n\n\n\t\tAxios.get('https://www.omdbapi.com/?apikey=' + 'ec05d9ae' + '&i=' + id)\n\t\t.then(response => {\n\t\t\tif (response.data.Response === 'False') {\n\t\t\t\talert('Movie not found');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet movie = [];\n\t\t\tmovie.id = id;\n\t\t\tmovie.title = response.data.Title;\n\t\t\tmovie.director = response.data.Director;\n\t\t\tmovie.year = response.data.Year;\n\t\t\tmovie.plot = response.data.Plot;\n\t\t\tmovie.rating = response.data.imdbRating;\n            movie.poster = response.data.Poster;\n            firebase.database().ref('movies').push().set(movie);\n\t\t\t// Axios.get('https://api.themoviedb.org/3/search/movie?api_key=' + 'a3efe44be05d742a6538700127b0e7f2' +'&language=en-US&query=' + movie.title + '&page=1&year=' + movie.year)\n\t\t\t// .then(response => {\n\t\t\t// \tif (response.data.results.length === 0) {\n\t\t\t// \t\talert('Movie not found');\n\t\t\t// \t\treturn;\n\t\t\t// \t}\n\n\t\t\t// \tmovie.poster = 'https://image.tmdb.org/t/p/w500' + response.data.results[0].poster_path;\n\n\t\t\t// \tfirebase.database().ref('movies').push().set(movie);\n\n\t\t\t// \twindow.scrollTo({\n\t\t\t// \t\ttop: document.body.scrollHeight,\n\t\t\t// \t\tbehavior: 'smooth'\n\t\t\t// \t});\n\t\t\t// });\n\t\t});\n\t}\n\n\taddList = (event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log('addList: ' + this.state.listName);\n\t\t\n\t\tlet listName = this.state.listName;\n\t\t\n\t\tthis.setState({\n\t\t\t'listName': ''\n\t\t});\n\n\t\tlet duplicate = false;\n\t\tObject.entries(this.state.lists).forEach(list => {\n\t\t\tif (listName.toLowerCase() === list[1].toLowerCase()) duplicate = true;\n\t\t});\n\t\tif (duplicate) {\n\t\t\talert('List already exists');\n\t\t\treturn;\n\t\t};\n\t\t\n\t\tlet ref = firebase.database().ref('lists');\n\t\tlet listRefKey = ref.push().key;\n\t\t\n\t\tlet updates = {};\n\t\tupdates['/lists/' + listRefKey + '/id'] = listRefKey;\n\t\tupdates['/lists/' + listRefKey + '/name'] = listName;\n\n\t\tfirebase.database().ref().update(updates);\n\t}\n\n\tgetUpdateLists = () => {\n\t\treturn Object.entries(this.state.lists).map(list => (\n\t\t\t<option key={list[0]}\n\t\t\t\tvalue={list[0]}>{list[1]}</option>\n\t\t));\n\t}\n\n\tgetAddToLists = (id) => {\n\t\treturn Object.entries(this.state.lists).map((list, i) => (\n\t\t\t<option key={list[0]}\n\t\t\t\tvalue={list[0]}>{list[1]}</option>\n\t\t));\n\t}\n\n\tupdateList = (event) => {\n\t\tlet listName = '';\n\t\tif (event.target.value === '') {\n\t\t\tlistName = 'All';\n\t\t} else {\n\t\t\tlistName = this.state.lists[event.target.value];\n\t\t}\n\n\t\tthis.setState({\n\t\t\tmovies: [],\n\t\t\tcurrentList: {id: event.target.value, name: listName},\n\t\t\tloaded: 0,\n\t\t\tloading: true\n\t\t});\n\n\t\tthis.forceUpdate(this.loadMovies);\n\t}\n\n\taddToList = (event, movieID) => {\n\t\tlet listID = event.target.value;\n\t\tlet duplicate = false;\n\t\tthis.state.movieListPairs.forEach(movieListPair => {\n\t\t\tlet pair = movieListPair.split(' - ');\n\t\t\tif (pair[0] === listID && pair[1] === movieID) duplicate = true;\n\t\t});\n\t\tif (duplicate) {\n\t\t\talert('Movie already in the selected list');\n\t\t\treturn;\n\t\t};\n\t\t\n\t\tlet ref = firebase.database().ref('movie-lists');\n\t\tref.push().set({[listID]: movieID});\n        alert('Added ' + movieID + ' to ' +  this.state.lists[event.target.value]);\n\t\t\n\t}\n\n\tgetIDsInList = () => {\n\t\tlet movieIDs = [];\n\t\tthis.state.movieListPairs.forEach(movieListPair => {\n\t\t\tif (movieListPair.search(this.state.currentList.id) > -1) {\n\t\t\t\tmovieIDs.push(movieListPair.slice((this.state.currentList.id + ' - ').length));\n\t\t\t}\n\t\t});\n\n\t\treturn movieIDs;\n\t}\n\n\tsearch = (event) => {\n\t\tevent.preventDefault();\n\t}\n\n\tdeleteMovie = (movieID) => {\n\t\tconsole.log('deleteMovie');\n\t\tlet ref = firebase.database().ref('movies');\n\t\t\n\t\tref.orderByChild('id').equalTo(movieID).limitToFirst(1).on('child_added', snapshot => {\n\t\t\tconsole.log(snapshot.key);\n\t\t\tref.child(snapshot.key).remove();\n\t\t});\n\n\t\tlet movies = this.state.movies;\n\t\t\n\t\tlet toDelete = -1;\n\t\tmovies.forEach((movie, i) => {\n\t\t\tif (movie.id === movieID) toDelete = i;\n\t\t});\n\t\tmovies.splice(toDelete, 1);\n\n\t\tthis.setState({movies: movies});\n\n\t\tPopupboxManager.close();\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t}\n\n\tlockScroll = () => {\n\t\tdocument.body.style.overflow = 'hidden';\n\t}\n\n\tunlockScroll = () => {\n\t\tdocument.body.style.overflow = 'inherit';\n    }\n    dimPoster(e) {\n        e.target.style.opacity = 0.5;\n      }\n    \n    resetPoster(e) {\n        e.target.style.opacity = 1;\n    }\n\n\tdisplayMovies = () => {\n\t\treturn this.state.movies.filter(movie => movie.title.toLowerCase().includes(this.state.searchQuery)).map(movie => (\n\t\t\t<img className=\"moviePoster\" src={movie.poster}\n                key={movie.id} alt=\"\"\n                onMouseEnter={this.dimPoster} onMouseLeave={this.resetPoster}\n\t\t\t\tonClick={this.displayLightbox.bind(this, movie)}/>\n\t\t));\n\t}\n\n\tdisplayLightbox = (movie) => {\n\t\tconst content = (\n\t\t\t\n            <div className=\"movLightboxContainer\">\n\t\t\t\t<img className=\"movLightboxImage\" src={movie.poster} alt=\"\"/>\n\t\t\t\t<div className = \"movLightboxContent\">\n\t\t\t\t\t<span className = \"title\">{movie.title}</span>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<span className = \"director\">Directed by: <b>{movie.director}</b></span>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<p>{movie.plot}</p>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<span className = \"rating\">Rating: <b>{movie.rating}</b></span>\n                    <br></br>\n\t\t\t\t\t<br></br>\n                    <div>\n\t\t\t\t\t\t<select className=\"dropdown\" value={this.state.addToListName} onChange={event => {this.addToList(event, movie.id)}}>\n\t\t\t\t\t\t\t<option hidden value=\"\">Add to List</option>\n                             {this.getAddToLists(movie.id)}\n                             \n                        </select>\n                        \n                        \n\t\t\t \t\t\t\n\t\t\t \t\t</div>\n                    <br></br>\n\t\t\t\t\t<br></br>\n                    <div>\n                        <button className=\"delete-button-add\" onClick={() => {this.deleteMovie(movie.id)}}>Delete From Collection</button>\n                    </div>\n\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t</div>\n\t\t)\n\n\t\tPopupboxManager.open({content,\n\t\t\tconfig: {\n\t\t\t\tonOpen: this.lockScroll,\n\t\t\t\tonClosed: this.unlockScroll\n\t\t\t}\n\t\t});\n    }\n\n\n\trender() {\n\t\tconst popupboxConfig = {\n\t\t\tstyle: {\n\t\t\t\toverflow: 'inherit'\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Movies Collection </h1>\n\t\t\t\t\n\t\t\t\t<div className=\"movie-forms\">\n                    <div className=\"dropdown\">\n\t\t\t\t\t\t\t<select  onChange={this.updateList} >\n\t\t\t\t\t\t\t\t<option value=\"\">All</option>\n                                {this.getUpdateLists()}\n                                \n                            </select>\n                            \n                        \n                            \n                            \n\t\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"movie-add-forms\">\n                        \n\t\t\t\t\t\t<form className=\"movie-form\" onSubmit={e => this.addMovie(e)}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"movieID\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-input-text\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.movieID}\n\t\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Movie title or IMDB ID\"/>\n                                \n                                <input type='submit' value='Add a Movie'/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\n\t\t\t\t\t\t<form className=\"movie-form\" onSubmit={e => this.addList(e)}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"listName\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-input-text\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.listName}\n\t\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter a new list name\"/>\n                                {/* <span>Create a List</span> */}\n                                <input type='submit' value='Create List'/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<form className=\"movie-form\" onSubmit={e => this.search(e)}>\n\t\t\t\t\t\t<div>\n                        <label><span>Search By Name: </span></label>\n                        <div>\n\t\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\t\tname=\"searchQuery\"\n\t\t\t\t\t\t\t\tclassName=\"form-input-text\"\n\t\t\t\t\t\t\t\tvalue={this.state.searchQuery}\n\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e)}\n\t\t\t\t\t\t\t\tplaceholder=\"Enter a name\"/>\n                        </div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t\n\t\t\t\t\t<div></div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className=\"movies\"\n\t\t\t\t\tref={this.moviesScroll}>\n\t\t\t\t\t{this.displayMovies()}\n\n\t\t\t\t\t<PopupboxContainer { ...popupboxConfig } />\n\t\t\t\t</div>\n                <div className='button'>\n                {!(this.state.loading) && <button className = 'but' onClick={this.loadMore}>Load More ...</button>}\n                </div>\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default AddMovie;"]},"metadata":{},"sourceType":"module"}
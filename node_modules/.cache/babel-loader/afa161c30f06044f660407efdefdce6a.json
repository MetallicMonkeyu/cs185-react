{"ast":null,"code":"var _jsxFileName = \"/Users/shengjiayu/Documents/GitHub/cs185-react/src/Components/Graph.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport config from '../config';\n\nconst firebase = require('firebase');\n\nexport class Graph extends Component {\n  constructor() {\n    super();\n\n    this.loadGraph = () => {\n      let element = document.getElementById('graph');\n      element.appendChild(this.createGraph());\n    };\n\n    this.drag = simulation => {\n      function dragStarted(d) {\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n\n      function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n      }\n\n      function dragEnded(d) {\n        if (!d3.event.active) {\n          simulation.alphaTarget(0);\n        }\n\n        d.fx = null;\n        d.fy = null;\n      }\n\n      return d3.drag().on('start', dragStarted).on('drag', dragged).on('end', dragEnded);\n    };\n\n    this.createGraph = () => {\n      let width = 1920;\n      let height = 1080;\n      let allNodes = this.state.nodes.movies.concat(this.state.nodes.actors);\n      let movieNodes = this.state.nodes.movies;\n      let links = this.state.links;\n      let svg = d3.create('svg').attr('viewBox', [0, 0, width, height]);\n      let simulation = d3.forceSimulation(allNodes).force('link', d3.forceLink().links(links).id(d => {\n        return d.index;\n      }).distance(200)).force('repel', d3.forceManyBody().distanceMin(100).distanceMax(500).strength(-300)).force('attract', d3.forceManyBody().distanceMin(300).distanceMax(1000).strength(100)).force('center', d3.forceCenter(width / 2, height / 2));\n      let link = svg.append('g').attr('stroke', '#999').attr('stroke-opacity', 0.6).selectAll('line').data(links).join('line').attr('stroke-width', 2);\n\n      let radius = node => {\n        if (node.type === 'movie') return 100;\n        return 20;\n      };\n\n      let fill = node => {\n        if (node.type === 'movie') return 'url(#' + node.title.replace(/[ ']/g, '_') + '-' + node.year + ')';\n        return d3.color('steelblue');\n      };\n\n      let hovering = false;\n      let hoverId = '';\n      let hoverNode = null;\n\n      let handleMouseOver = (d, i) => {\n        svg.append('text').attr('id', 'text-' + i).style('text-anchor', 'middle').attr('x', () => d.x).attr('y', () => d.y + 50).text(d.name);\n        hovering = true;\n        hoverId = 'text-' + i;\n        hoverNode = d;\n      };\n\n      let handleMouseOut = (d, i) => {\n        d3.select('#text-' + i).remove();\n        hovering = false;\n      };\n\n      let defs = svg.append('defs');\n      movieNodes.forEach(movieNode => {\n        defs.append('pattern').attr('id', movieNode.title.replace(/[ ']/g, '_') + '-' + movieNode.year).attr('width', 1).attr('height', 1).attr('x', 0).attr('y', 0).append('image').attr('xlink:href', movieNode.poster).attr('width', 300).attr('height', 300).attr('x', -50).attr('y', -50);\n      });\n      let node = svg.append('g').attr('stroke', '#fff').attr('stroke-width', 1.5).selectAll('circle').data(allNodes).join('circle').attr('r', radius).attr('fill', fill).on('mouseover', handleMouseOver).on('mouseout', handleMouseOut).call(this.drag(simulation));\n      simulation.on('tick', () => {\n        link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n        node.attr('cx', d => d.x).attr('cy', d => d.y);\n\n        if (hovering) {\n          d3.select('#' + hoverId).attr('x', () => hoverNode.x).attr('y', () => hoverNode.y + 50);\n        }\n      });\n      return svg.node();\n    };\n\n    this.state = {\n      nodes: {\n        movies: [],\n        actors: []\n      },\n      links: []\n    };\n    this.graph = React.createRef();\n  }\n\n  componentDidMount() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n\n    let movieNodes = [];\n    let actorNodes = [];\n    let links = [];\n    let ref = firebase.database().ref('graph');\n    ref.on('value', snapshot => {\n      if (!snapshot.val()) return;\n      let movies = snapshot.val();\n      console.log(movies);\n\n      for (let entry in movies) {\n        if (movies[entry].lists === 'Action') {\n          console.log(\"Found list\");\n        }\n\n        console.log(\"Not Found list\");\n      }\n\n      let moviesLength = Object.values(movies).length;\n      console.log(moviesLength);\n      Object.values(movies).forEach(movie => {\n        movie.type = 'movie';\n        movieNodes.push(movie);\n        console.log(movie);\n        movie.actors.forEach(actor => {\n          let exists = false;\n          let actorIndex = -1;\n\n          for (let i = 0; i < actorNodes.length; i++) {\n            let n = actorNodes[i];\n\n            if (n.name === actor) {\n              exists = true;\n              actorIndex = i;\n              break;\n            }\n          }\n\n          let link = {};\n\n          if (exists) {\n            link = {\n              source: movieNodes.length - 1,\n              target: moviesLength + actorIndex\n            };\n          } else {\n            let node = {\n              name: actor,\n              type: 'actor'\n            };\n            actorNodes.push(node);\n            link = {\n              source: movieNodes.length - 1,\n              target: moviesLength + actorNodes.length - 1\n            };\n          }\n\n          links.push(link);\n        });\n      });\n      movieNodes = this.state.nodes.movies.concat(movieNodes);\n      actorNodes = this.state.nodes.actors.concat(actorNodes);\n      links = this.state.links.concat(links);\n      this.setState({\n        'nodes': {\n          'movies': movieNodes,\n          'actors': actorNodes\n        },\n        'links': links\n      }, this.loadGraph);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 4\n      }\n    });\n  }\n\n}\nexport default Graph;","map":{"version":3,"sources":["/Users/shengjiayu/Documents/GitHub/cs185-react/src/Components/Graph.js"],"names":["React","Component","d3","config","firebase","require","Graph","constructor","loadGraph","element","document","getElementById","appendChild","createGraph","drag","simulation","dragStarted","d","event","active","alphaTarget","restart","fx","x","fy","y","dragged","dragEnded","on","width","height","allNodes","state","nodes","movies","concat","actors","movieNodes","links","svg","create","attr","forceSimulation","force","forceLink","id","index","distance","forceManyBody","distanceMin","distanceMax","strength","forceCenter","link","append","selectAll","data","join","radius","node","type","fill","title","replace","year","color","hovering","hoverId","hoverNode","handleMouseOver","i","style","text","name","handleMouseOut","select","remove","defs","forEach","movieNode","poster","call","source","target","graph","createRef","componentDidMount","apps","length","initializeApp","actorNodes","ref","database","snapshot","val","console","log","entry","lists","moviesLength","Object","values","movie","push","actor","exists","actorIndex","n","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport config from '../config';\n\nconst firebase = require('firebase');\n\nexport class Graph extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tnodes: {\n\t\t\t\tmovies: [],\n\t\t\t\tactors: []\n\t\t\t},\n\t\t\tlinks: []\n\t\t}\n\t\tthis.graph = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tif (!firebase.apps.length) {\n\t\t\tfirebase.initializeApp(config);\n\t\t}\n\n\t\tlet movieNodes = [];\n\t\tlet actorNodes = [];\n\t\tlet links = [];\n\n\t\tlet ref = firebase.database().ref('graph');\n\t\tref.on('value', snapshot => {\n\t\t\tif (!snapshot.val()) return;\n\n            let movies = snapshot.val();\n            console.log(movies);\n\n            for (let entry in movies) {\n                if(movies[entry].lists === 'Action') {\n                    console.log(\"Found list\");\n                }\n                console.log(\"Not Found list\");\n            }\n\n            let moviesLength = Object.values(movies).length;\n            console.log(moviesLength);\n\t\t\tObject.values(movies).forEach(movie => {\n\t\t\t\tmovie.type = 'movie';\n\t\t\t\t\n\t\t\t\tmovieNodes.push(movie);\n\n\t\t\t\tconsole.log(movie);\n\t\t\t\tmovie.actors.forEach(actor => {\n\t\t\t\t\tlet exists = false;\n\t\t\t\t\tlet actorIndex = -1;\n\t\t\t\t\tfor (let i = 0; i < actorNodes.length; i++) {\n\t\t\t\t\t\tlet n =  actorNodes[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif (n.name === actor) {\n\t\t\t\t\t\t\texists = true;\n\t\t\t\t\t\t\tactorIndex = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tlet link = {};\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tlink = {\n\t\t\t\t\t\t\tsource: movieNodes.length - 1,\n\t\t\t\t\t\t\ttarget: moviesLength + actorIndex,\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet node = {\n\t\t\t\t\t\t\tname: actor,\n\t\t\t\t\t\t\ttype: 'actor'\n\t\t\t\t\t\t};\n\t\t\t\t\t\tactorNodes.push(node);\n\t\t\t\t\t\t\n\t\t\t\t\t\tlink = {\n\t\t\t\t\t\t\tsource: movieNodes.length - 1,\n\t\t\t\t\t\t\ttarget: moviesLength + actorNodes.length - 1,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\n\t\t\t\t\tlinks.push(link);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tmovieNodes = this.state.nodes.movies.concat(movieNodes);\n\t\t\tactorNodes = this.state.nodes.actors.concat(actorNodes);\n\t\t\tlinks = this.state.links.concat(links);\n\t\n\t\t\tthis.setState({\n\t\t\t\t'nodes': {\n\t\t\t\t\t'movies': movieNodes,\n\t\t\t\t\t'actors': actorNodes\n\t\t\t\t},\n\t\t\t\t'links': links\n\t\t\t}, this.loadGraph);\n\t\t});\n\n\t}\n\t\n\tloadGraph = () => {\n\t\tlet element = document.getElementById('graph');\n\t\telement.appendChild(this.createGraph());\n\t}\n\n\tdrag = (simulation) => {\n\t\tfunction dragStarted(d) {\n\t\t\tif (!d3.event.active) simulation.alphaTarget(0.3).restart();\n\t\t\td.fx = d.x;\n\t\t\td.fy = d.y;\n\t\t}\n\n\t\tfunction dragged(d) {\n\t\t\td.fx = d3.event.x;\n\t\t\td.fy = d3.event.y;\n\t\t}\n\n\t\tfunction dragEnded(d) {\n\t\t\tif (!d3.event.active){\n                simulation.alphaTarget(0);\n            } \n\t\t\td.fx = null;\n\t\t\td.fy = null;\n\t\t}\n\n\t\treturn d3.drag()\n\t\t\t.on('start', dragStarted)\n\t\t\t.on('drag', dragged)\n\t\t\t.on('end', dragEnded);\n\t}\n\n\tcreateGraph = () => {\n\t\tlet width = 1920;\n\t\tlet height = 1080;\n\n\t\tlet allNodes = this.state.nodes.movies.concat(this.state.nodes.actors);\n\t\tlet movieNodes = this.state.nodes.movies;\n\t\tlet links = this.state.links;\n\n\t\tlet svg = d3.create('svg')\n\t\t\t.attr('viewBox', [0, 0, width, height]);\n\t\t\n\t\tlet simulation = d3.forceSimulation(allNodes)\n\t\t\t.force('link', d3.forceLink().links(links).id(d => { return d.index; }).distance(200))\n\t\t\t.force('repel', d3.forceManyBody().distanceMin(100).distanceMax(500).strength(-300))\n\t\t\t.force('attract', d3.forceManyBody().distanceMin(300).distanceMax(1000).strength(100))\n\t\t\t.force('center', d3.forceCenter(width / 2, height / 2));\n\n\t\tlet link = svg.append('g')\n\t\t\t.attr('stroke', '#999')\n\t\t\t.attr('stroke-opacity', 0.6)\n\t\t\t.selectAll('line')\n\t\t\t.data(links)\n\t\t\t.join('line')\n\t\t\t.attr('stroke-width', 2);\n\n\t\tlet radius = (node) => {\n\t\t\tif (node.type === 'movie')\n\t\t\t\treturn 100;\n\t\t\treturn 20;\n\t\t}\n\n\t\tlet fill = (node) => {\n\t\t\tif (node.type === 'movie')\n\t\t\t\treturn 'url(#' + node.title.replace(/[ ']/g, '_') + '-' + node.year + ')';\n\t\t\treturn d3.color('steelblue');\n\t\t}\n\t\t\n\t\tlet hovering = false;\n\t\tlet hoverId = '';\n\t\tlet hoverNode = null;\n\t\t\n\t\tlet handleMouseOver = (d, i) => {\n\t\t\tsvg.append('text')\n\t\t\t\t.attr('id', 'text-' + i)\n\t\t\t\t.style('text-anchor', 'middle')\n\t\t\t\t.attr('x', () => d.x)\n\t\t\t\t.attr('y', () => d.y + 50)\n\t\t\t\t.text(d.name);\n\t\t\t\n\t\t\thovering = true;\n\t\t\thoverId = 'text-' + i;\n\t\t\thoverNode = d;\n\t\t}\n\n\t\tlet handleMouseOut = (d, i) => {\n\t\t\td3.select('#text-' + i).remove();\n\n\t\t\thovering = false;\n\t\t}\n\t\t\n\t\tlet defs = svg.append('defs');\n\n\t\tmovieNodes.forEach(movieNode => {\n\t\t\tdefs.append('pattern')\n\t\t\t\t.attr('id', movieNode.title.replace(/[ ']/g, '_') + '-' + movieNode.year)\n\t\t\t\t.attr('width', 1)\n\t\t\t\t.attr('height', 1)\n\t\t\t\t.attr('x', 0)\n\t\t\t\t.attr('y', 0)\n\t\t\t\t.append('image')\n\t\t\t\t.attr('xlink:href', movieNode.poster)\n\t\t\t\t.attr('width', 300)\n\t\t\t\t.attr('height', 300)\n\t\t\t\t.attr('x', -50)\n\t\t\t\t.attr('y', -50);\n\t\t});\n\n\t\tlet node = svg.append('g')\n\t\t\t.attr('stroke', '#fff')\n\t\t\t.attr('stroke-width', 1.5)\n\t\t\t.selectAll('circle')\n\t\t\t.data(allNodes)\n\t\t\t.join('circle')\n\t\t\t.attr('r', radius)\n\t\t\t.attr('fill', fill)\n\t\t\t.on('mouseover', handleMouseOver)\n\t\t\t.on('mouseout', handleMouseOut)\n\t\t\t.call(this.drag(simulation));\n\t\t\n\t\tsimulation.on('tick', () => {\n\t\t\tlink.attr('x1', d => d.source.x)\n\t\t\t\t.attr('y1', d => d.source.y)\n\t\t\t\t.attr('x2', d => d.target.x)\n\t\t\t\t.attr('y2', d => d.target.y);\n\n\t\t\tnode.attr('cx', d => d.x)\n\t\t\t\t.attr('cy', d => d.y);\n\n\t\t\tif (hovering) {\n\t\t\t\td3.select('#' + hoverId)\n\t\t\t\t\t.attr('x', () => hoverNode.x)\n\t\t\t\t\t.attr('y', () => hoverNode.y + 50);\n\t\t\t}\n\t\t});\n\n\t\treturn svg.node();\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"graph\">\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}
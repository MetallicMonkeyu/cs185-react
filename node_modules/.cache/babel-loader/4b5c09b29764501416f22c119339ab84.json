{"ast":null,"code":"var _jsxFileName = \"/Users/shengjiayu/Documents/GitHub/cs185-react/src/Components/Graph.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport config from '../config';\n\nconst firebase = require('firebase');\n\nexport class Graph extends Component {\n  constructor() {\n    super();\n\n    this.loadGraph = () => {\n      let element = document.getElementById('graph');\n      element.appendChild(this.createGraph());\n    };\n\n    this.drag = simulation => {\n      function dragStarted(d) {\n        if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n\n      function dragged(d) {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n      }\n\n      function dragEnded(d) {\n        if (!d3.event.active) {\n          simulation.alphaTarget(0);\n        }\n\n        d.fx = null;\n        d.fy = null;\n      }\n\n      return d3.drag().on('start', dragStarted).on('drag', dragged).on('end', dragEnded);\n    };\n\n    this.createGraph = () => {\n      const headerOffset = document.getElementsByClassName('header')[0].offsetHeight;\n      const navbarOffset = document.getElementsByClassName('navheader')[0].offsetHeight;\n      const width = window.innerWidth * 1.6;\n      const height = (window.innerHeight - headerOffset - navbarOffset) * 1.6;\n      let allNodes = this.state.nodes.movies.concat(this.state.nodes.actors);\n      let movieNodes = this.state.nodes.movies;\n      let links = this.state.links;\n      let svg = d3.create('svg').attr('viewBox', [0, 0, width, height]);\n      let simulation = d3.forceSimulation(allNodes).force('link', d3.forceLink().links(links).id(d => {\n        return d.index;\n      }).distance(200)).force('repel', d3.forceManyBody()).force('attract', d3.forceManyBody()).force('center', d3.forceCenter(width / 2, height / 2));\n      let link = svg.append('g').attr('stroke', '#777').attr('stroke-opacity', 1).selectAll('line').data(links).join('line').attr('stroke-width', 2);\n\n      let radius = node => {\n        if (node.type === 'actor') {\n          return 25;\n        }\n\n        return 100;\n      };\n\n      let fill = node => {\n        if (node.type === 'movie') {\n          console.log('url(#' + node.title.replace(/[ ']/g, '_') + '-' + node.year + ')');\n          return 'url(#' + node.title.replace(/[ ']/g, '_') + '-' + node.year + ')';\n        }\n\n        return d3.color('rgb(191, 215, 228)');\n      };\n\n      let hovering = false;\n      let hoverId = '';\n      let hoverNode = null;\n      let defs = svg.append('defs');\n      movieNodes.forEach(movieNode => {\n        defs.append('pattern').attr('id', movieNode.title.replace(/[ ']/g, '_') + '-' + movieNode.year).attr('width', 1).attr('height', 1).attr('x', -35).attr('y', -35).append('image').attr('xlink:href', movieNode.poster).attr('width', 200).attr('height', 200);\n      });\n      let tooltip = d3.select('body').append('div').style('position', 'absolute').style('z-index', '10').style('visibility', 'hidden');\n      let node = svg.append('g').attr('stroke', '#fff').attr('stroke-width', 1.5).selectAll('circle').data(allNodes).join('circle').attr('r', radius).attr('fill', fill).on('mouseover', function (node) {\n        if (node.type === 'actor') {\n          tooltip.text(node.name);\n          tooltip.style('visibility', 'visible');\n          tooltip.style('top', d3.event.y - 20 + 'px').style('left', d3.event.x + 20 + 'px');\n        }\n      }).on('mouseout', function () {\n        return tooltip.style('visibility', 'hidden');\n      }).call(this.drag(simulation));\n      simulation.on('tick', () => {\n        link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n        node.attr('cx', d => d.x).attr('cy', d => d.y);\n\n        if (hovering) {\n          d3.select('#' + hoverId).attr('x', () => hoverNode.x).attr('y', () => hoverNode.y + 50);\n        }\n      });\n      return svg.node();\n    };\n\n    this.state = {\n      nodes: {\n        movies: [],\n        actors: []\n      },\n      links: []\n    };\n    this.graph = React.createRef();\n  }\n\n  componentDidMount() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n\n    let movieNodes = [];\n    let actorNodes = [];\n    let links = [];\n    let ref = firebase.database().ref('graph');\n    ref.on('value', snapshot => {\n      if (!snapshot.val()) return;\n      let movies = snapshot.val();\n      console.log(movies);\n\n      for (let entry in movies) {\n        if (movies[entry].lists === 'Action') {\n          console.log(\"Found list\");\n        }\n\n        console.log(\"Not Found list\");\n      }\n\n      let moviesLength = Object.values(movies).length;\n      console.log(moviesLength);\n      Object.values(movies).forEach(movie => {\n        movie.type = 'movie';\n        console.log(movie);\n        movieNodes.push(movie);\n        movie.actors.forEach(actor => {\n          let exists = false;\n          let actorIndex = -1;\n\n          for (let i = 0; i < actorNodes.length; i++) {\n            let n = actorNodes[i];\n\n            if (n.name === actor) {\n              exists = true;\n              actorIndex = i;\n              break;\n            }\n          }\n\n          let link = {};\n\n          if (exists) {\n            link = {\n              source: movieNodes.length - 1,\n              target: moviesLength + actorIndex\n            };\n          } else {\n            let node = {\n              name: actor,\n              type: 'actor'\n            };\n            actorNodes.push(node);\n            link = {\n              source: movieNodes.length - 1,\n              target: moviesLength + actorNodes.length - 1\n            };\n          }\n\n          links.push(link);\n        });\n      });\n      movieNodes = this.state.nodes.movies.concat(movieNodes);\n      actorNodes = this.state.nodes.actors.concat(actorNodes);\n      links = this.state.links.concat(links);\n      this.setState({\n        'nodes': {\n          'movies': movieNodes,\n          'actors': actorNodes\n        },\n        'links': links\n      }, this.loadGraph);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, \"Movies Graph \"));\n  }\n\n}\nexport default Graph;","map":{"version":3,"sources":["/Users/shengjiayu/Documents/GitHub/cs185-react/src/Components/Graph.js"],"names":["React","Component","d3","config","firebase","require","Graph","constructor","loadGraph","element","document","getElementById","appendChild","createGraph","drag","simulation","dragStarted","d","event","active","alphaTarget","restart","fx","x","fy","y","dragged","dragEnded","on","headerOffset","getElementsByClassName","offsetHeight","navbarOffset","width","window","innerWidth","height","innerHeight","allNodes","state","nodes","movies","concat","actors","movieNodes","links","svg","create","attr","forceSimulation","force","forceLink","id","index","distance","forceManyBody","forceCenter","link","append","selectAll","data","join","radius","node","type","fill","console","log","title","replace","year","color","hovering","hoverId","hoverNode","defs","forEach","movieNode","poster","tooltip","select","style","text","name","call","source","target","graph","createRef","componentDidMount","apps","length","initializeApp","actorNodes","ref","database","snapshot","val","entry","lists","moviesLength","Object","values","movie","push","actor","exists","actorIndex","i","n","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport config from '../config';\n\nconst firebase = require('firebase');\n\nexport class Graph extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tnodes: {\n\t\t\t\tmovies: [],\n\t\t\t\tactors: []\n\t\t\t},\n\t\t\tlinks: []\n\t\t}\n\t\tthis.graph = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tif (!firebase.apps.length) {\n\t\t\tfirebase.initializeApp(config);\n\t\t}\n\n\t\tlet movieNodes = [];\n\t\tlet actorNodes = [];\n\t\tlet links = [];\n\n\t\tlet ref = firebase.database().ref('graph');\n\t\tref.on('value', snapshot => {\n\t\t\tif (!snapshot.val()) return;\n\n            let movies = snapshot.val();\n            console.log(movies);\n\n            for (let entry in movies) {\n                if(movies[entry].lists === 'Action') {\n                    console.log(\"Found list\");\n                }\n                console.log(\"Not Found list\");\n            }\n\n            let moviesLength = Object.values(movies).length;\n            console.log(moviesLength);\n\t\t\tObject.values(movies).forEach(movie => {\n\t\t\t\tmovie.type = 'movie';\n\t\t\t\tconsole.log(movie);\n\t\t\t\tmovieNodes.push(movie);\n\n\t\t\t\tmovie.actors.forEach(actor => {\n\t\t\t\t\tlet exists = false;\n\t\t\t\t\tlet actorIndex = -1;\n\t\t\t\t\tfor (let i = 0; i < actorNodes.length; i++) {\n\t\t\t\t\t\tlet n =  actorNodes[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif (n.name === actor) {\n\t\t\t\t\t\t\texists = true;\n\t\t\t\t\t\t\tactorIndex = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tlet link = {};\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tlink = {\n\t\t\t\t\t\t\tsource: movieNodes.length - 1,\n\t\t\t\t\t\t\ttarget: moviesLength + actorIndex,\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet node = {\n\t\t\t\t\t\t\tname: actor,\n\t\t\t\t\t\t\ttype: 'actor'\n\t\t\t\t\t\t};\n\t\t\t\t\t\tactorNodes.push(node);\n\t\t\t\t\t\t\n\t\t\t\t\t\tlink = {\n\t\t\t\t\t\t\tsource: movieNodes.length - 1,\n\t\t\t\t\t\t\ttarget: moviesLength + actorNodes.length - 1,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\n\t\t\t\t\tlinks.push(link);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tmovieNodes = this.state.nodes.movies.concat(movieNodes);\n\t\t\tactorNodes = this.state.nodes.actors.concat(actorNodes);\n\t\t\tlinks = this.state.links.concat(links);\n\t\n\t\t\tthis.setState({\n\t\t\t\t'nodes': {\n\t\t\t\t\t'movies': movieNodes,\n\t\t\t\t\t'actors': actorNodes\n\t\t\t\t},\n\t\t\t\t'links': links\n\t\t\t}, this.loadGraph);\n\t\t});\n\n\t}\n\t\n\tloadGraph = () => {\n\t\tlet element = document.getElementById('graph');\n\t\telement.appendChild(this.createGraph());\n\t}\n\n\tdrag = (simulation) => {\n\t\tfunction dragStarted(d) {\n\t\t\tif (!d3.event.active) simulation.alphaTarget(0.3).restart();\n\t\t\td.fx = d.x;\n\t\t\td.fy = d.y;\n\t\t}\n\n\t\tfunction dragged(d) {\n\t\t\td.fx = d3.event.x;\n\t\t\td.fy = d3.event.y;\n\t\t}\n\n\t\tfunction dragEnded(d) {\n\t\t\tif (!d3.event.active){\n                simulation.alphaTarget(0);\n            } \n\t\t\td.fx = null;\n\t\t\td.fy = null;\n\t\t}\n\n\t\treturn d3.drag()\n\t\t\t.on('start', dragStarted)\n\t\t\t.on('drag', dragged)\n\t\t\t.on('end', dragEnded);\n\t}\n\n\tcreateGraph = () => {\n        const headerOffset = document.getElementsByClassName('header')[0].offsetHeight;\n        const navbarOffset = document.getElementsByClassName('navheader')[0].offsetHeight;\n\t\tconst width = window.innerWidth*1.6;\n        const height = (window.innerHeight-headerOffset-navbarOffset)*1.6;\n\n\t\tlet allNodes = this.state.nodes.movies.concat(this.state.nodes.actors);\n\t\tlet movieNodes = this.state.nodes.movies;\n\t\tlet links = this.state.links;\n\n\t\tlet svg = d3.create('svg').attr('viewBox', [0, 0, width, height]);\n\t\t\n            \n        let simulation = d3.forceSimulation(allNodes)\n            .force('link', d3.forceLink().links(links).id(d => { return d.index; }).distance(200))\n            .force('repel', d3.forceManyBody())\n            .force('attract', d3.forceManyBody())\n            .force('center', d3.forceCenter(width/2, height/2));\n\n\t\tlet link = svg.append('g')\n\t\t\t.attr('stroke', '#777')\n\t\t\t.attr('stroke-opacity', 1)\n\t\t\t.selectAll('line')\n\t\t\t.data(links)\n\t\t\t.join('line')\n\t\t\t.attr('stroke-width', 2);\n\n\t\tlet radius = (node) => {\n\t\t\tif(node.type === 'actor') {\n                return 25;\n              } \n              return 100;\n        }\n        \n        \n      \n\n\t\tlet fill = (node) => {\n            if (node.type === 'movie'){\n                console.log('url(#' + node.title.replace(/[ ']/g, '_') + '-' + node.year + ')');\n                return 'url(#' + node.title.replace(/[ ']/g, '_') + '-' + node.year + ')';\n            }\n\t\t\treturn d3.color('rgb(191, 215, 228)');\n\t\t}\n\t\t\n\t\tlet hovering = false;\n\t\tlet hoverId = '';\n\t\tlet hoverNode = null;\n\t\t\n        \n       \n\t\t\n\t\tlet defs = svg.append('defs');\n\n\t\tmovieNodes.forEach(movieNode => {\n\t\t\tdefs.append('pattern')\n\t\t\t\t.attr('id', movieNode.title.replace(/[ ']/g, '_') + '-' + movieNode.year)\n\t\t\t\t.attr('width', 1)\n\t\t\t\t.attr('height', 1)\n\t\t\t\t.attr('x', -35)\n\t\t\t\t.attr('y', -35)\n\t\t\t\t.append('image')\n\t\t\t\t.attr('xlink:href', movieNode.poster)\n\t\t\t\t.attr('width', 200)\n\t\t\t\t.attr('height', 200)\n\t\t\t\t\n        });\n        \n        let tooltip = d3.select('body')\n            .append('div')\n            .style('position', 'absolute')\n            .style('z-index', '10')\n            .style('visibility', 'hidden')\n\n\t\tlet node = svg.append('g')\n\t\t\t.attr('stroke', '#fff')\n\t\t\t.attr('stroke-width', 1.5)\n\t\t\t.selectAll('circle')\n\t\t\t.data(allNodes)\n\t\t\t.join('circle')\n\t\t\t.attr('r', radius)\n            .attr('fill', fill)\n            .on('mouseover', function(node){\n                if(node.type === 'actor') {\n                  tooltip.text(node.name);\n                  tooltip.style('visibility', 'visible');\n                  tooltip.style('top', (d3.event.y-20)+'px').style('left',(d3.event.x+20)+'px');\n                }\n            })\n\t\t\t.on('mouseout', function(){\n                return tooltip.style('visibility', 'hidden');\n            })\n\t\t\t.call(this.drag(simulation));\n\t\t\t\n\t\t\n\t\tsimulation.on('tick', () => {\n\t\t\tlink.attr('x1', d => d.source.x)\n\t\t\t\t.attr('y1', d => d.source.y)\n\t\t\t\t.attr('x2', d => d.target.x)\n\t\t\t\t.attr('y2', d => d.target.y);\n\n\t\t\tnode.attr('cx', d => d.x)\n\t\t\t\t.attr('cy', d => d.y);\n\n\t\t\tif (hovering) {\n\t\t\t\td3.select('#' + hoverId)\n\t\t\t\t\t.attr('x', () => hoverNode.x)\n\t\t\t\t\t.attr('y', () => hoverNode.y + 50);\n\t\t\t}\n\t\t});\n\n\t\treturn svg.node();\n\t}\n\t\n\trender() {\n        \n\t\treturn (\n            \n\t\t\t<div id=\"graph\">\n                <h1>Movies Graph </h1>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}